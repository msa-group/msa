{{&not(Parameters.NamespaceId)}}
Namespace:
  Type: ALIYUN::SAE::Namespace
  Properties:
    NamespaceName: {{ Parameters.NamespaceName }}
    NamespaceId: {{Join([Parameters.Region, ":", Parameters.NamespaceName])}}
    NamespaceDescription: {{Parameters.NamespaceDescription}}
{{/}}

SecurityGroup:
  Type: ALIYUN::ECS::SecurityGroup
  Properties:
    VpcId: {{Parameters.VpcId}}
    SecurityGroupIngress:
      {{#Default(Parameters.Applications, [])}}
      - PortRange: {{Join([Parameters.ContainerPort, "/",Parameters.ContainerPort])}}
        Priority: 1
        SourceCidrIp: 0.0.0.0/0
        IpProtocol: tcp
      {{/}}
    SecurityGroupName: 'sg-ros-autocreate'

{{#Default(Parameters.Applications, [])}}
ConfigMap{{$index}}:
  Type: ALIYUN::SAE::ConfigMap
{{&not(Parameters.NamespaceId)}}
  DependsOn:
    - Namespace
{{/}}
  Properties:
    Name: {{Join(['configmap', "-",$item.AppName])}}
    NamespaceId: 
{{&not(Parameters.NamespaceId)}}
      Ref: Namespace
{{/}}
{{&(Parameters.NamespaceId)}}
      {{Parameters.NamespaceId}}
{{/}}
    Data: 
      {{#($item.ConfigMapData)}}
      {{$item.Data.Key}}: {{$item.Data.Value}}
      {{/}}

Application{{$index}}:
  Type: ALIYUN::SAE::Application
  DependsOn:
    - Namespace
    - ConfigMap{{$index}}
    - SecurityGroup
  Properties:
    PackageType: Image
    ImageUrl: {{$item.ImageUrl}}
    ProgrammingLanguage: {{Default($item.ProgrammingLanguage, "java")}}
    Replicas: {{Default($item.Replicas, 2)}}
    NamespaceId: 
{{&(Parameters.NamespaceId)}}
      {{Parameters.NamespaceId}}
{{/}}
{{&not(Parameters.NamespaceId)}}
      Ref: Namespace
{{/}}
    AppSource: micro_service
    AppName: {{$item.AppName}}
    AutoConfig: false
    VpcId: {{Parameters.VpcId}}
    VSwitchId: {{Parameters.VswtichId}}
    SecurityGroupId: 
      Ref: SecurityGroup
    Cpu: {{Default($item.Cpu, 1000)}}
    Memory: {{Default($item.Memory, 2048)}}
    {{&($item.Envs)}}
    Envs: {{RosEnvs($item.Envs)}}
    {{/}}
    ConfigMapMountDesc:
      Fn::Sub:
        - |
          [
            {{#Default($item.ConfigMapData, [])}}
            {
            "ConfigMapId": "${ConfigMapId}",
            "Key": "${Key{{$index}}}",
            "MountPath": "${MountPath{{$index}}}"
          }
          {{/}}
          ]
        - ConfigMapId: 
            Fn::GetAtt:
              - ConfigMap{{$index}}
              - ConfigMapId
          {{#Default($item.ConfigMapData, [])}}
          Key{{$index}}: {{Default($item.Data.Key, "key1")}}  
          MountPath{{$index}}: {{Default($item.MountPath, "/etc/nginx/nginx.conf")}}  
          {{/}}
{{/}}